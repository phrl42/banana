# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  GLFW_config = debug
  GLAD_config = debug
  Banana_config = debug
  Sandbox_config = debug

else ifeq ($(config),release)
  GLFW_config = release
  GLAD_config = release
  Banana_config = release
  Sandbox_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := GLFW GLAD Banana Sandbox

.PHONY: all clean help $(PROJECTS) dependencies engine game

all: $(PROJECTS)

dependencies: GLAD GLFW

engine: Banana

game: Sandbox

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C Banana/vendor/GLFW -f Makefile config=$(GLFW_config)
endif

GLAD:
ifneq (,$(GLAD_config))
	@echo "==== Building GLAD ($(GLAD_config)) ===="
	@${MAKE} --no-print-directory -C Banana/vendor/GLAD -f Makefile config=$(GLAD_config)
endif

Banana: GLAD GLFW
ifneq (,$(Banana_config))
	@echo "==== Building Banana ($(Banana_config)) ===="
	@${MAKE} --no-print-directory -C Banana -f Makefile config=$(Banana_config)
endif

Sandbox: Banana GLAD GLFW
ifneq (,$(Sandbox_config))
	@echo "==== Building Sandbox ($(Sandbox_config)) ===="
	@${MAKE} --no-print-directory -C Sandbox -f Makefile config=$(Sandbox_config)
endif

clean:
	@${MAKE} --no-print-directory -C Banana/vendor/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C Banana/vendor/GLAD -f Makefile clean
	@${MAKE} --no-print-directory -C Banana -f Makefile clean
	@${MAKE} --no-print-directory -C Sandbox -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GLFW"
	@echo "   GLAD"
	@echo "   Banana"
	@echo "   Sandbox"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"